{"version":3,"file":"static/js/134.9192da39.chunk.js","mappings":"uMA+DA,UAzDe,WAAO,IAAD,EACnB,GAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkDF,EAAAA,EAAAA,UAAS,IAA3D,eAAOG,EAAP,KAA0BC,EAA1B,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BP,EAAAA,EAAAA,WAAS,GAArC,eAAOQ,EAAP,KAAeC,EAAf,KACMC,EAAQ,UAAGJ,EAAaK,IAAI,eAApB,QAA+B,GACvCC,GAAWC,EAAAA,EAAAA,OAOjBC,EAAAA,EAAAA,YAAU,WACkB,KAAtBX,IAGFM,GAAU,IACVM,EAAAA,EAAAA,IAAgBZ,GACba,MAAK,SAAAC,GAAM,OAAIf,EAAce,EAAlB,IACXC,QAAQT,GAAU,IAExB,GAAE,CAACN,KAEJW,EAAAA,EAAAA,YAAU,WACS,KAAbJ,GACFN,EAAqBM,EAExB,GAAE,CAACA,IAUJ,OACE,6BACE,kBAAMS,SAVO,SAAAC,GACfA,EAAMC,iBACN,IAxBwBC,EAwBlBC,EAAQH,EAAMI,OAAOF,KAAKC,MAChCnB,EAAqBmB,GAvBrBhB,EAD4B,MADJe,EA0BNC,GAzBe,CAAED,KAAAA,GAAS,CAAC,GA0B7CF,EAAMI,OAAOC,OACd,EAIG,WACE,kBAAOC,KAAK,OAAOJ,KAAK,OAAOK,YAAY,sBAC3C,mBAAQD,KAAM,SAAd,uBAEDlB,IAAU,SAAC,IAAD,KACX,SAAC,KAAD,KACA,+BACGP,QADH,IACGA,OADH,EACGA,EAAY2B,KAAI,SAAAC,GAAK,OACpB,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAqBC,MAAO,CAAEC,KAAMrB,GAAvD,UACGsB,EAAAA,EAAAA,GAAUL,IADiBA,EAAME,GADhB,QAQ7B,C","sources":["pages/Movies.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Outlet, useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { getSearchMovies } from '../API/GetMoves';\nimport { MovieItem } from '../components/MovieItem';\nimport Loader from './../components/Loeder';\n\nconst Movies = () => {\n  const [movesState, setMovesState] = useState([]);\n  const [searchMovieQwerry, setSearchMovieQwerry] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loader, setLoader] = useState(false);\n  const moveName = searchParams.get('name') ?? '';\n  const location = useLocation();\n\n  const updateQueryString = name => {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (searchMovieQwerry === '') {\n      return;\n    } else {\n      setLoader(true);\n      getSearchMovies(searchMovieQwerry)\n        .then(movies => setMovesState(movies))\n        .finally(setLoader(false));\n    }\n  }, [searchMovieQwerry]);\n\n  useEffect(() => {\n    if (moveName !== '') {\n      setSearchMovieQwerry(moveName);\n    }\n  }, [moveName]);\n\n  const onSummit = event => {\n    event.preventDefault();\n    const value = event.target.name.value;\n    setSearchMovieQwerry(value);\n    updateQueryString(value);\n    event.target.reset();\n  };\n\n  return (\n    <main>\n      <form onSubmit={onSummit}>\n        <input type=\"text\" name=\"name\" placeholder=\"Search movies...\" />\n        <button type={'submit'}>Search</button>\n      </form>\n      {loader && <Loader />}\n      <Outlet />\n      <ul>\n        {movesState?.map(movie => (\n          <Link to={`${movie.id}`} key={movie.id} state={{ from: location }}>\n            {MovieItem(movie)}\n          </Link>\n        ))}\n      </ul>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","movesState","setMovesState","searchMovieQwerry","setSearchMovieQwerry","useSearchParams","searchParams","setSearchParams","loader","setLoader","moveName","get","location","useLocation","useEffect","getSearchMovies","then","movies","finally","onSubmit","event","preventDefault","name","value","target","reset","type","placeholder","map","movie","to","id","state","from","MovieItem"],"sourceRoot":""}